==================
Acyclic2
==================

Acyclic2(R)
  DECL Q,S
  BEG
    Q = L(R)            { Q = previous value of S }
    S = R * Q           { S = nodes with paths of length 1 }
    WHILE -eq(Q,S) DO
      Q = S
      S = R * S         { increase length of paths by 1 }
    OD
    RETURN empty(S)
  END.

---

(source_file
  (definition
    (identifier)
    (parameter_list
      (identifier))
    (program_body
      (decl_list
        (identifier)
        (identifier))
      (assignment_statement
        (identifier)
        (call
          (base_function)
          (argument_list
            (identifier))))
      (comment)
      (assignment_statement
        (identifier)
        (binary_expression
          (identifier)
          (identifier)))
      (comment)
      (while_loop
        (complement
          (call
            (base_function)
            (argument_list
              (identifier)
              (identifier))))
        (while_body
          (assignment_statement
            (identifier)
            (identifier))
          (assignment_statement
            (identifier)
            (binary_expression
              (identifier)
              (identifier)))
          (comment)))
      (return_statement
        (call
          (base_function)
          (argument_list
            (identifier)))))))
