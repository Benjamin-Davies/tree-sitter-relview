==================
DFS
==================

{******************************************************
  Computation of the vector of reachable nodes in a
  directed graph via nested-recursive depth first
  search
******************************************************}

Dfs(R,s,t)
  DECL p, v
  BEG  IF empty(t)
         THEN v = s
         ELSE p = point(t);
              IF incl(p,s)
                THEN v = Dfs(R,s,t&-p)
                ELSE v = Dfs(R,Dfs(R,s|p,R^*p),t&-p)
              FI
       FI
       RETURN v
  END.

ReachDfs(R,s)
  DECL v
  BEG  v = Dfs(R,O(s),s)
       RETURN v
  END.

---

(source_file
  (comment)
  (definition
    (identifier)
    (parameter_list
      (identifier)
      (identifier)
      (identifier))
    (program_body
      (decl_list
        (identifier)
        (identifier))
      (if_statement
        (call
          (base_function)
          (argument_list
            (identifier)))
        (then_clause
          (assignment_statement
            (identifier)
            (identifier)))
        (else_clause
          (assignment_statement
            (identifier)
            (call
              (base_function)
              (argument_list
                (identifier))))
          (if_statement
            (call
              (base_function)
              (argument_list
                (identifier)
                (identifier)))
            (then_clause
              (assignment_statement
                (identifier)
                (call
                  (identifier)
                  (argument_list
                    (identifier)
                    (identifier)
                    (binary_expression
                      (identifier)
                      (complement
                        (identifier)))))))
            (else_clause
              (assignment_statement
                (identifier)
                (call
                  (identifier)
                  (argument_list
                    (identifier)
                    (call
                      (identifier)
                      (argument_list
                        (identifier)
                        (binary_expression
                          (identifier)
                          (identifier))
                        (binary_expression
                          (transpose
                            (identifier))
                          (identifier))))
                    (binary_expression
                      (identifier)
                      (complement
                        (identifier))))))))))
      (return_statement
        (identifier))))
  (definition
    (identifier)
    (parameter_list
      (identifier)
      (identifier))
    (program_body
      (decl_list
        (identifier))
      (assignment_statement
        (identifier)
        (call
          (identifier)
          (argument_list
            (identifier)
            (call
              (base_function)
              (argument_list
                (identifier)))
            (identifier))))
      (return_statement
        (identifier)))))
