{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "relview",
  "word": "identifier",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "definition"
          },
          {
            "type": "STRING",
            "value": "."
          }
        ]
      }
    },
    "_whitespace": {
      "type": "PATTERN",
      "value": "\\s+"
    },
    "comment": {
      "type": "PATTERN",
      "value": "\\{[^\\}]*\\}"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_-]*"
    },
    "definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "parameter_list"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "program_body"
            },
            {
              "type": "SYMBOL",
              "name": "function_body"
            }
          ]
        }
      ]
    },
    "program_body": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "decl_list"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "BEG"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "SYMBOL",
          "name": "return_statement"
        },
        {
          "type": "STRING",
          "value": "END"
        }
      ]
    },
    "function_body": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "identifier"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "decl_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "DECL"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "definition"
              },
              {
                "type": "STRING",
                "value": ";"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "assignment_statement"
            },
            {
              "type": "SYMBOL",
              "name": "if_statement"
            },
            {
              "type": "SYMBOL",
              "name": "while_loop"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ";"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "assignment_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "IF"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "then_clause"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "else_clause"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "FI"
        }
      ]
    },
    "then_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "THEN"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        }
      ]
    },
    "else_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "ELSE"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        }
      ]
    },
    "while_loop": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "WHILE"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "while_body"
        }
      ]
    },
    "while_body": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "DO"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "OD"
        }
      ]
    },
    "return_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "RETURN"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_term"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expression"
        }
      ]
    },
    "_term": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "base_function"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "transpose"
        },
        {
          "type": "SYMBOL",
          "name": "complement"
        },
        {
          "type": "SYMBOL",
          "name": "call"
        },
        {
          "type": "SYMBOL",
          "name": "parenthesized_expression"
        }
      ]
    },
    "parenthesized_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "call": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "base_function"
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "argument_list"
        }
      ]
    },
    "argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_expression"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "_expression"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "complement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "SYMBOL",
          "name": "_term"
        }
      ]
    },
    "transpose": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_term"
        },
        {
          "type": "STRING",
          "value": "^"
        }
      ]
    },
    "binary_expression": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_term"
          },
          {
            "type": "SYMBOL",
            "name": "_binary_operator"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "_binary_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "|"
        },
        {
          "type": "STRING",
          "value": "&"
        },
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "STRING",
          "value": "\\"
        }
      ]
    },
    "base_function": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "TRUE"
        },
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "FALSE"
        },
        {
          "type": "STRING",
          "value": "false"
        },
        {
          "type": "STRING",
          "value": "L"
        },
        {
          "type": "STRING",
          "value": "O"
        },
        {
          "type": "STRING",
          "value": "I"
        },
        {
          "type": "STRING",
          "value": "Ln1"
        },
        {
          "type": "STRING",
          "value": "On1"
        },
        {
          "type": "STRING",
          "value": "L1n"
        },
        {
          "type": "STRING",
          "value": "O1n"
        },
        {
          "type": "STRING",
          "value": "dom"
        },
        {
          "type": "STRING",
          "value": "syq"
        },
        {
          "type": "STRING",
          "value": "trans"
        },
        {
          "type": "STRING",
          "value": "refl"
        },
        {
          "type": "STRING",
          "value": "symm"
        },
        {
          "type": "STRING",
          "value": "inj"
        },
        {
          "type": "STRING",
          "value": "init"
        },
        {
          "type": "STRING",
          "value": "next"
        },
        {
          "type": "STRING",
          "value": "succ"
        },
        {
          "type": "STRING",
          "value": "point"
        },
        {
          "type": "STRING",
          "value": "atom"
        },
        {
          "type": "STRING",
          "value": "randomXY"
        },
        {
          "type": "STRING",
          "value": "randomcfXY"
        },
        {
          "type": "STRING",
          "value": "random"
        },
        {
          "type": "STRING",
          "value": "randomperm"
        },
        {
          "type": "STRING",
          "value": "empty"
        },
        {
          "type": "STRING",
          "value": "unival"
        },
        {
          "type": "STRING",
          "value": "eq"
        },
        {
          "type": "STRING",
          "value": "incl"
        },
        {
          "type": "STRING",
          "value": "cardeq"
        },
        {
          "type": "STRING",
          "value": "cardlt"
        },
        {
          "type": "STRING",
          "value": "cardleq"
        },
        {
          "type": "STRING",
          "value": "cardgt"
        },
        {
          "type": "STRING",
          "value": "cardgeq"
        },
        {
          "type": "STRING",
          "value": "epsi"
        },
        {
          "type": "STRING",
          "value": "cardrel"
        },
        {
          "type": "STRING",
          "value": "cardfilter"
        },
        {
          "type": "STRING",
          "value": "1-st"
        },
        {
          "type": "STRING",
          "value": "2-nd"
        },
        {
          "type": "STRING",
          "value": "p-1"
        },
        {
          "type": "STRING",
          "value": "p-2"
        },
        {
          "type": "STRING",
          "value": "p-ord"
        },
        {
          "type": "STRING",
          "value": "i-1"
        },
        {
          "type": "STRING",
          "value": "i-2"
        },
        {
          "type": "STRING",
          "value": "s-ord"
        },
        {
          "type": "STRING",
          "value": "part-f"
        },
        {
          "type": "STRING",
          "value": "tot-f"
        },
        {
          "type": "STRING",
          "value": "minsets"
        },
        {
          "type": "STRING",
          "value": "minsets_upset"
        },
        {
          "type": "STRING",
          "value": "maxsets"
        },
        {
          "type": "STRING",
          "value": "maxsets_downset"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_whitespace"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [
    [
      {
        "type": "SYMBOL",
        "name": "transpose"
      },
      {
        "type": "SYMBOL",
        "name": "complement"
      }
    ],
    [
      {
        "type": "SYMBOL",
        "name": "base_function"
      },
      {
        "type": "SYMBOL",
        "name": "identifier"
      }
    ]
  ],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {
    "keyword": [
      {
        "type": "STRING",
        "value": "BEG"
      },
      {
        "type": "STRING",
        "value": "END"
      },
      {
        "type": "STRING",
        "value": "DECL"
      },
      {
        "type": "STRING",
        "value": "IF"
      },
      {
        "type": "STRING",
        "value": "THEN"
      },
      {
        "type": "STRING",
        "value": "ELSE"
      },
      {
        "type": "STRING",
        "value": "FI"
      },
      {
        "type": "STRING",
        "value": "WHILE"
      },
      {
        "type": "STRING",
        "value": "DO"
      },
      {
        "type": "STRING",
        "value": "OD"
      },
      {
        "type": "STRING",
        "value": "RETURN"
      }
    ],
    "base_function": [
      {
        "type": "STRING",
        "value": "TRUE"
      },
      {
        "type": "STRING",
        "value": "true"
      },
      {
        "type": "STRING",
        "value": "FALSE"
      },
      {
        "type": "STRING",
        "value": "false"
      },
      {
        "type": "STRING",
        "value": "L"
      },
      {
        "type": "STRING",
        "value": "O"
      },
      {
        "type": "STRING",
        "value": "I"
      },
      {
        "type": "STRING",
        "value": "Ln1"
      },
      {
        "type": "STRING",
        "value": "On1"
      },
      {
        "type": "STRING",
        "value": "L1n"
      },
      {
        "type": "STRING",
        "value": "O1n"
      },
      {
        "type": "STRING",
        "value": "dom"
      },
      {
        "type": "STRING",
        "value": "syq"
      },
      {
        "type": "STRING",
        "value": "trans"
      },
      {
        "type": "STRING",
        "value": "refl"
      },
      {
        "type": "STRING",
        "value": "symm"
      },
      {
        "type": "STRING",
        "value": "inj"
      },
      {
        "type": "STRING",
        "value": "init"
      },
      {
        "type": "STRING",
        "value": "next"
      },
      {
        "type": "STRING",
        "value": "succ"
      },
      {
        "type": "STRING",
        "value": "point"
      },
      {
        "type": "STRING",
        "value": "atom"
      },
      {
        "type": "STRING",
        "value": "randomXY"
      },
      {
        "type": "STRING",
        "value": "randomcfXY"
      },
      {
        "type": "STRING",
        "value": "random"
      },
      {
        "type": "STRING",
        "value": "randomperm"
      },
      {
        "type": "STRING",
        "value": "empty"
      },
      {
        "type": "STRING",
        "value": "unival"
      },
      {
        "type": "STRING",
        "value": "eq"
      },
      {
        "type": "STRING",
        "value": "incl"
      },
      {
        "type": "STRING",
        "value": "cardeq"
      },
      {
        "type": "STRING",
        "value": "cardlt"
      },
      {
        "type": "STRING",
        "value": "cardleq"
      },
      {
        "type": "STRING",
        "value": "cardgt"
      },
      {
        "type": "STRING",
        "value": "cardgeq"
      },
      {
        "type": "STRING",
        "value": "epsi"
      },
      {
        "type": "STRING",
        "value": "cardrel"
      },
      {
        "type": "STRING",
        "value": "cardfilter"
      },
      {
        "type": "STRING",
        "value": "1-st"
      },
      {
        "type": "STRING",
        "value": "2-nd"
      },
      {
        "type": "STRING",
        "value": "p-1"
      },
      {
        "type": "STRING",
        "value": "p-2"
      },
      {
        "type": "STRING",
        "value": "p-ord"
      },
      {
        "type": "STRING",
        "value": "i-1"
      },
      {
        "type": "STRING",
        "value": "i-2"
      },
      {
        "type": "STRING",
        "value": "s-ord"
      },
      {
        "type": "STRING",
        "value": "part-f"
      },
      {
        "type": "STRING",
        "value": "tot-f"
      },
      {
        "type": "STRING",
        "value": "minsets"
      },
      {
        "type": "STRING",
        "value": "minsets_upset"
      },
      {
        "type": "STRING",
        "value": "maxsets"
      },
      {
        "type": "STRING",
        "value": "maxsets_downset"
      }
    ]
  }
}